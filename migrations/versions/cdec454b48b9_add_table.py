"""Add table

Revision ID: cdec454b48b9
Revises: 
Create Date: 2024-09-09 14:34:48.937032

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision: str = 'cdec454b48b9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('position_table',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_table',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(length=30), nullable=False),
    sa.Column('last_name', sa.String(length=30), nullable=False),
    sa.Column('registered_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('account_table',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sqlalchemy_utils.types.email.EmailType(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('task_table',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=True),
    sa.Column('responsible_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('deadline', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('IN_PROCESS', 'FINISH', name='taskstatus'), nullable=False),
    sa.Column('time_estimate', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['user_table.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['responsible_id'], ['user_table.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('author_id'),
    sa.UniqueConstraint('responsible_id')
    )
    op.create_table('user_position_table',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('position_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['position_id'], ['position_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('position_id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('company_table',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('address', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('website', sa.String(length=30), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account_table.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_id')
    )
    op.create_table('invite_table',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('code', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account_table.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('observers_table',
    sa.Column('tasks_id', sa.UUID(), nullable=True),
    sa.Column('users_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['tasks_id'], ['task_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['users_id'], ['user_table.id'], ondelete='SET NULL')
    )
    op.create_table('performers_table',
    sa.Column('tasks_id', sa.UUID(), nullable=True),
    sa.Column('users_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['tasks_id'], ['task_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['users_id'], ['user_table.id'], ondelete='SET NULL')
    )
    op.create_table('secret_table',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('password', sa.LargeBinary(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('member_table',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('struct_adm_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('path', sqlalchemy_utils.types.ltree.LtreeType(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company_table.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('struct_path', 'struct_adm_table', ['path'], unique=False, postgresql_using='gist')
    op.create_table('struct_adm_position_table',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('struct_adm_id', sa.Integer(), nullable=False),
    sa.Column('position_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['position_id'], ['position_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['struct_adm_id'], ['struct_adm_table.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('struct_adm_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('struct_adm_position_table')
    op.drop_index('struct_path', table_name='struct_adm_table', postgresql_using='gist')
    op.drop_table('struct_adm_table')
    op.drop_table('member_table')
    op.drop_table('secret_table')
    op.drop_table('performers_table')
    op.drop_table('observers_table')
    op.drop_table('invite_table')
    op.drop_table('company_table')
    op.drop_table('user_position_table')
    op.drop_table('task_table')
    op.drop_table('account_table')
    op.drop_table('user_table')
    op.drop_table('position_table')
    # ### end Alembic commands ###
